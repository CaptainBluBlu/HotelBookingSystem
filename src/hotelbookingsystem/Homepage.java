/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package hotelbookingsystem;

import java.io.File;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Glenn Lim Phang Zhen
 */
public class Homepage extends javax.swing.JFrame {

    /** Creates new form Homepage */
    public Homepage() {
        initComponents();
    }
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        btnBook = new javax.swing.JButton();
        cmbDay = new javax.swing.JComboBox<>();
        txtCustomerName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCustomerIC = new javax.swing.JTextField();
        txtContactNumber = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        cmbDuration = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmbRoomNo = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnLogout1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBookingList = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnReceipt = new javax.swing.JButton();
        btnPay = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 50)); // NOI18N
        jLabel2.setText("Getwellsoon Hotel");

        btnBook.setFont(new java.awt.Font("SimHei", 1, 18)); // NOI18N
        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        cmbDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Days -", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }));
        cmbDay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDayItemStateChanged(evt);
            }
        });

        jLabel3.setText("Customer Name : ");

        jLabel4.setText("IC /  Passport No :");

        jLabel5.setText("Contact Number :");

        jLabel6.setText("Email :");

        cmbDuration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Duration -", "1", "2", "3", "4", "5", "6", " " }));
        cmbDuration.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDurationItemStateChanged(evt);
            }
        });

        jLabel7.setText("Day of Booking : ");

        jLabel8.setText("Duration :");

        jLabel9.setText("Night(s)");

        jLabel10.setText("Room :");

        btnExit.setBackground(new java.awt.Color(255, 51, 51));
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnLogout1.setBackground(new java.awt.Color(255, 153, 102));
        btnLogout1.setText("Logout");
        btnLogout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout1ActionPerformed(evt);
            }
        });

        tblBookingList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room No", "Start Day", "End Day", "Customer IC", "Customer Name", "Customer Email", "Customer Contact", "Date Booked", "Paid status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBookingList);
        if (tblBookingList.getColumnModel().getColumnCount() > 0) {
            tblBookingList.getColumnModel().getColumn(8).setResizable(false);
        }

        btnUpdate.setText("Update List");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel1.setText("Find Room :");

        btnReceipt.setText("Create Invoice");
        btnReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReceiptActionPerformed(evt);
            }
        });

        btnPay.setText("Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8))
                            .addGap(25, 25, 25)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cmbDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5)
                                .addComponent(jLabel10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCustomerIC)
                                .addComponent(txtContactNumber)
                                .addComponent(txtEmail)
                                .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnBook)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnPay)
                        .addGap(18, 18, 18)
                        .addComponent(btnReceipt)
                        .addGap(18, 18, 18)
                        .addComponent(btnLogout1)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogout1)
                    .addComponent(btnExit)
                    .addComponent(btnUpdate)
                    .addComponent(btnReceipt)
                    .addComponent(btnPay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCustomerIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addComponent(btnBook))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
 
        if (cmbDay.getSelectedIndex() == 0 || cmbDuration.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Please select the right day and duration", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
           String customerName, customerIC, customerEmail, customerContact, roomNo;
           int startDay, duration;
           roomNo = String.valueOf(cmbRoomNo.getSelectedItem());
           customerName = txtCustomerName.getText();
           customerIC = txtCustomerIC.getText();
           customerEmail = txtEmail.getText();
           customerContact = txtContactNumber.getText();
           startDay = cmbDay.getSelectedIndex();
           duration = cmbDuration.getSelectedIndex();
           
            if (customerName.isBlank() || customerContact.isBlank() || roomNo.isBlank() || customerEmail.isBlank() || customerIC.isBlank()) {
                JOptionPane.showMessageDialog(null, "Please fill up all fields", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
               
                Booking newBooking = new Booking(roomNo, startDay, duration, customerIC, customerName, customerEmail, customerContact);
                if (newBooking.checkBookingEntry()) {
                    txtContactNumber.setText("");
                    txtCustomerIC.setText("");
                    txtEmail.setText("");
                    txtCustomerName.setText("");
                    cmbDay.setSelectedIndex(0);
                    cmbDuration.setSelectedIndex(0);
                    cmbRoomNo.setSelectedIndex(0);
                    PaymentPage payment = new PaymentPage(this, true, newBooking);
                    payment.setVisible(true);
                }
            }
        }      
    }//GEN-LAST:event_btnBookActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int n = JOptionPane.showConfirmDialog(null, "Would you like to terminate?", "Terminate System", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION)
            System.exit(0);     
    }//GEN-LAST:event_btnExitActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // puting the data from the txt file into the table
        String filepath = "Booking.txt";
        DefaultTableModel model = (DefaultTableModel)tblBookingList.getModel();
        model.setRowCount(0);
        File file = new File(filepath);
        
        try {
            Scanner inputFile = new Scanner(file);
            while (inputFile.hasNextLine()) {
                String Data = inputFile.nextLine();
                String[] bookingDetails = Data.split(",", -1);
                bookingDetails[1] = convertDay.convertInt(Integer.parseInt(bookingDetails[1]));
                bookingDetails[2] = convertDay.convertInt(Integer.parseInt(bookingDetails[2]));
                model.addRow(bookingDetails);
            } 
        } catch (Exception e) {
        }
        
        //this is to recheck the room availability checking
        if (cmbDay.getSelectedIndex() == 0 || cmbDuration.getSelectedIndex() == 0){
        } else {
            int startDay = cmbDay.getSelectedIndex();
            int duration = cmbDuration.getSelectedIndex();
            checkRoom roomsCheck = new checkRoom(startDay, duration);
            ArrayList<String> availableRooms = roomsCheck.getAvailableRooms();
            cmbRoomNo.removeAllItems();
            
            availableRooms.forEach((availableRoom) -> {
                cmbRoomNo.addItem(availableRoom);
            });     
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void cmbDurationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDurationItemStateChanged
      //to fill in only available rooms based on selection  
        
        if (cmbDay.getSelectedIndex() == 0 || cmbDuration.getSelectedIndex() == 0){
        } else {
            int startDay = cmbDay.getSelectedIndex();
            int duration = cmbDuration.getSelectedIndex();
            checkRoom roomsCheck = new checkRoom(startDay, duration);
            ArrayList<String> availableRooms = roomsCheck.getAvailableRooms();
            cmbRoomNo.removeAllItems();
            
            availableRooms.forEach((availableRoom) -> {
                cmbRoomNo.addItem(availableRoom);
            });     
        }
    }//GEN-LAST:event_cmbDurationItemStateChanged

    private void cmbDayItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDayItemStateChanged
        if (cmbDay.getSelectedIndex() == 0 || cmbDuration.getSelectedIndex() == 0){
        } else {
            int startDay = cmbDay.getSelectedIndex();
            int duration = cmbDuration.getSelectedIndex();
            checkRoom roomsCheck = new checkRoom(startDay, duration);
            ArrayList<String> availableRooms = roomsCheck.getAvailableRooms();
            cmbRoomNo.removeAllItems();
            
            availableRooms.forEach((availableRoom) -> {
                cmbRoomNo.addItem(availableRoom);
            });    
        }
    }//GEN-LAST:event_cmbDayItemStateChanged

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        UpdateBooking update = new UpdateBooking();
        this.setVisible(false);
        update.setVisible(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        DefaultTableModel model = (DefaultTableModel)tblBookingList.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tblBookingList.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + txtSearch.getText().trim()));
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        DefaultTableModel model = (DefaultTableModel)tblBookingList.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tblBookingList.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + txtSearch.getText().trim()));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed

        
        DefaultTableModel maintable = (DefaultTableModel)tblBookingList.getModel();
        if (tblBookingList.getSelectedRowCount() == 1 ) {
             //checking for only selected data row
             int row = tblBookingList.convertRowIndexToModel(tblBookingList.getSelectedRow());
             String roomNo = String.valueOf(maintable.getValueAt(row, 0));
             String customerName = String.valueOf(maintable.getValueAt(row, 4));
             String paidStatus = String.valueOf(maintable.getValueAt(row, 8));
             int startDay = convertDay.convertString(String.valueOf(maintable.getValueAt(row, 1)));
             int endDay = convertDay.convertString(String.valueOf(maintable.getValueAt(row, 2)));
             int duration = endDay - startDay;
             if (duration <= 0) {
                duration = duration + 7;
            }
             
             if (paidStatus.equals("notPaid")) {

                Receipt payment = new Receipt(startDay, duration, endDay);
                PaymentPage pay = new PaymentPage(this, true, payment, roomNo, customerName, row);
                pay.setVisible(true);
                
            } else if (paidStatus.equals("Paid")) {
                JOptionPane.showMessageDialog(null, "The customer has already Paid");
            }

             
        } else {
            if (tblBookingList.getSelectedRowCount() == 0) {
                //no table is selected
                JOptionPane.showMessageDialog(null, "No data is selected!");
                
            } else {
                JOptionPane.showMessageDialog(null, "Please make sure to select only a row!");
            }
        }           
             
        

    }//GEN-LAST:event_btnPayActionPerformed

    private void btnReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReceiptActionPerformed
        //get the invoice of the selected index 
        DefaultTableModel maintable = (DefaultTableModel)tblBookingList.getModel();
        if (tblBookingList.getSelectedRowCount() == 1 ) {
             //checking for only selected data row
             int row = tblBookingList.convertRowIndexToModel(tblBookingList.getSelectedRow());
             String customerName = String.valueOf(maintable.getValueAt(row, 4));
             String roomNo = String.valueOf(maintable.getValueAt(row, 0));
             String tempStartDay = String.valueOf(maintable.getValueAt(row, 1));
             String tempEndDay = String.valueOf(maintable.getValueAt(row, 2));
             int startDay = convertDay.convertString(tempStartDay);
             int endDay = convertDay.convertString(tempEndDay);
             int duration = endDay - startDay;
             if (duration <= 0) {
                duration = duration + 7;
            }
             Receipt invoice = new Receipt(startDay, duration, endDay);
             Invoice showReceipt = new Invoice(invoice , roomNo, customerName);
             showReceipt.setVisible(true);
             
        } else {
            if (tblBookingList.getSelectedRowCount() == 0) {
                //no table is selected
                JOptionPane.showMessageDialog(null, "No data is selected!");
                
            } else {
                JOptionPane.showMessageDialog(null, "Please make sure to select only a row!");
            }
        }      
    }//GEN-LAST:event_btnReceiptActionPerformed

    private void btnLogout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout1ActionPerformed
       this.dispose();
       Login logout = new Login();
       logout.setVisible(true);
    }//GEN-LAST:event_btnLogout1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Homepage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogout1;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnReceipt;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbDay;
    private javax.swing.JComboBox<String> cmbDuration;
    private javax.swing.JComboBox<String> cmbRoomNo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBookingList;
    private javax.swing.JTextField txtContactNumber;
    private javax.swing.JTextField txtCustomerIC;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

}
